pbinom(0.975, size = 20, prob = 0.51)
?pbinom
pbinom(14, size = 20, prob = 0.51)
pbinom(6, size = 20, prob = 0.51)
pbinom(14, size = 20, prob = 0.51)-pbinom(6, size = 20, prob = 0.51)
pbinom(14, size = 200, prob = 0.51)-pbinom(6, size = 200, prob = 0.51)
pbinom(114, size = 200, prob = 0.51)-pbinom(86, size = 200, prob = 0.51)
pbinom(114, size = 200, prob = 0.51)-pbinom(85, size = 200, prob = 0.51)
pbinom(14, size = 20, prob = 0.51)-pbinom(5, size = 20, prob = 0.51)
# Power analysis
#
# Power analysis answers the question: What is the
null.p <- 0.5
real.p <- 0.55 # Presumed real p value
effect.size <- real.p - null.p
sample.size <- 20
alpha <- 0.05
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size,
prob = nullp)
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size,
prob = null.p)
crit.test.values
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power <- qbinom(crit.test.values[1]-1,
size = sample.size,
prob = real.p) +
1 - qbinom(crit.test.values[2], size = sample.size, prob = real.p)
crit.test.values[1]
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power <- pbinom(crit.test.values[1]-1,
size = sample.size,
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size, prob = real.p)
power
sample.size <- seq(from = 20, to = 2000, by = 50)
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size,
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size,
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size, prob = real.p)
}
warnings()
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
plot(sample.size, power)
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = 'Power Analysis', typ = 'o', pch = 19,
ylim = c(0,1))
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = 'Binomial Test Power Analysis
a,b,d', typ = 'o', pch = 19,
ylim = c(0,1))
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', real.p, sep = ''),
typ = 'o', pch = 19,
ylim = c(0,1))
real.p <- 0.51 # Presumed real p value
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', real.p, sep = ''),
typ = 'o', pch = 19,
ylim = c(0,1))
1/2.05
350/2
*1.05
175*0.05
340*(2*0.487-1)
##### Power Needed to Detect Male Bias Sex Ratio in Humans ######
null.p <- 0.5 # Probability of female
odds.male <- 1.05 # From the
real.p <- 1/(1+odds.male) #
sample.size <- seq(from = 2000, to = 200000, by = 1000)
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', real.p, sep = ''),
typ = 'o', pch = 19,
ylim = c(0,1))
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
typ = 'o', pch = 19,
ylim = c(0,1))
##### Power Needed to Detect Male Bias Sex Ratio in Humans ######
null.p <- 0.5 # Probability of female
real.p <- 0.487
sample.size <- seq(from = 200, to = 20000, by = 1000)
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
typ = 'o', pch = 19,
ylim = c(0,1))
sample.size <- c(100, seq(from = 500, to = 20000, by = 500))
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
typ = 'o', pch = 19,
ylim = c(0,1))
abline(v = seq(from = 0, to = max(sample.size), length = 2500),
lty = 2, col = 'gray')
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
typ = 'o', pch = 19,
ylim = c(0,1))
abline(v = seq(from = 0, to = max(sample.size), by = 2500),
lty = 2, col = 'gray')
abline(h = seq(from = 0, to = 1, by = 0.05),
lty = 2, col = 'gray')
sample.size <- c(100, seq(from = 500, to = 50000, by = 500))
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
abline(v = seq(from = 0, to = max(sample.size), by = 2500),
lty = 2, col = 'gray')
abline(h = seq(from = 0, to = 1, by = 0.05),
lty = 2, col = 'gray')
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
typ = 'o', pch = 19,
ylim = c(0,1))
sample.size <- c(100, seq(from = 500, to = 30000, by = 500))
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
abline(v = seq(from = 0, to = max(sample.size), by = 2500),
lty = 2, col = 'gray')
abline(h = seq(from = 0, to = 1, by = 0.05),
lty = 2, col = 'gray')
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
typ = 'o', pch = 19,
ylim = c(0,1))
plot(c(0,max.sample.size), c(0,1), typ = 'n'.
plot(c(0,max(sample.size), c(0,1), typ = 'n'.
plot(c(0,max(sample.size), c(0,1), typ = 'n',
)
)
plot(c(0,max(sample.size)), c(0,1), typ = 'n',
xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
ylim = c(0,1))
abline(v = seq(from = 0, to = max(sample.size), by = 2500),
lty = 2, col = 'gray')
abline(h = seq(from = 0, to = 1, by = 0.05),
lty = 2, col = 'gray')
points(sample.size, power,
typ = 'o', pch = 19)
plot(c(0,max(sample.size)), c(0,1), typ = 'n',
xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
ylim = c(0,1))
abline(v = seq(from = 0, to = max(sample.size), by = 2500),
lty = 2, col = 'gray')
abline(h = seq(from = 0, to = 1, by = 0.05),
lty = 2, col = 'gray')
lines(sample.size, power)
sample.size <- c(100, seq(from = 500, to = 30000, by = 50))
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
plot(c(0,max(sample.size)), c(0,1), typ = 'n',
xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
ylim = c(0,1))
abline(v = seq(from = 0, to = max(sample.size), by = 2500),
lty = 2, col = 'gray')
abline(h = seq(from = 0, to = 1, by = 0.05),
lty = 2, col = 'gray')
lines(sample.size, power)
sample.size <- c(100, seq(from = 500, to = 30000, by = 100))
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
plot(c(0,max(sample.size)), c(0,1), typ = 'n',
xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
ylim = c(0,1))
abline(v = seq(from = 0, to = max(sample.size), by = 2500),
lty = 2, col = 'gray')
abline(h = seq(from = 0, to = 1, by = 0.05),
lty = 2, col = 'gray')
lines(sample.size, power)
sample.size <- c(10, seq(from = 100, to = 30000, by = 100))
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
plot(c(0,max(sample.size)), c(0,1), typ = 'n',
xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
ylim = c(0,1))
abline(v = seq(from = 0, to = max(sample.size), by = 2500),
lty = 2, col = 'gray')
abline(h = seq(from = 0, to = 1, by = 0.05),
lty = 2, col = 'gray')
lines(sample.size, power)
binom(c(0.025, 0.975), size = 60, prob = 0.5)
qbinom(c(0.025, 0.975), size = 60, prob = 0.5)
pbinom(c(21, 38), size = 60, prob = 0.5167)
pbinom(21, size = 60, prob = 0.5167)
pbinom(21, size = 60, prob = 0.5167)+`-pbinom(21, size = 60, prob = 0.5167)`
pbinom(21, size = 60, prob = 0.5167)+-pbinom(38, size = 60, prob = 0.5167)`
_
)
);lkjahsf
""
asd/lfkjas ''
''
``
pbinom(21, size = 60, prob = 0.5167)+1-pbinom(38, size = 60, prob = 0.5167)
null.p <- 0.5
real.p <- 0.5167 # Presumed real p value
effect.size <- real.p - null.p
sample.size <- 60
alpha <- 0.05
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size,
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power <- pbinom(crit.test.values[1]-1,
size = sample.size,
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size, prob = real.p)
power
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power <- pbinom(crit.test.values[1]-1,
size = sample.size,
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size, prob = real.p)
sample.size <- seq(from = 20, to = 2000, by = 50)
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
plot(sample.size, power, xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', real.p, sep = ''),
typ = 'o', pch = 19,
ylim = c(0,1))
##### Power Needed to Detect Male Bias Sex Ratio in Humans ######
null.p <- 0.5 # Probability of female
real.p <- 0.487
sample.size <- c(10, seq(from = 100, to = 30000, by = 100))
power <- rep(NA, length(sample.size))
for (i in 1:length(sample.size)){
crit.test.values <- qbinom(c(alpha/2, 1 - alpha/2),
size = sample.size[i],
prob = null.p)
# Find probability of getting a sample in the rejection region given the real
# hypothesis
power[i] <- pbinom(crit.test.values[1]-1,
size = sample.size[i],
prob = real.p) +
1 - pbinom(crit.test.values[2], size = sample.size[i], prob = real.p)
}
plot(c(0,max(sample.size)), c(0,1), typ = 'n',
xlab = 'Sample Size',
ylab = 'Probability of Rejecting Null (Power)',
main = paste('Binomial Test Power Analysis
H0: p = ', null.p, ', HA: p = ', round(real.p,3), sep = ''),
ylim = c(0,1))
abline(v = seq(from = 0, to = max(sample.size), by = 2500),
lty = 2, col = 'gray')
abline(h = seq(from = 0, to = 1, by = 0.05),
lty = 2, col = 'gray')
lines(sample.size, power)
qbinom(c(0.025, 0.975), size = 212, prob = 143/212)
qbinom(c(0.025, 0.975), size = 212, prob = 143/212)/212
rm(list = ls())
t <- seq(from = -5, to = 5, length = 1000)
n <- c(2,3,4,5,10,20,50,10000)
df <- n - 1
library(viridisLite)
cols <- viridis(length(n), direction = -1)
plot(t,t, typ = 'n', xlab = 't-Statistic', ylab = 'Probability Density',
main = 't-Distribution', ylim = c(0,1/sqrt(2*pi)), cex.lab = 1.3,
cex.main = 1.3)
for (i in 1:length(df)){
pdf.t <- dt(t, df[i])
lines(t, pdf.t, col = cols[i], lwd = 2)
}
ldg.names <- paste('Sample size = ', n, sep = '')
legend('topleft', legend = ldg.names, col = cols, lwd = 2,
bty = 'n')
chi <- seq(from = 0, to = 20, length = 1000)
pdf.chi <- dchisq(chi, df = 5)
plot(chi,pdf.chi, xlab = '', ylab = 'Probability Density',
main = 'Chi-Squared Distribution',
lwd = 3, typ = 'l')
# Homework 2
#
# Beta distribution
par(mfcol = c(1,1), cex.lab = 1.4, cex.axis = 1.4)
alpha <- 5
beta <- 1
x <- seq(from = 0, to = 1, length = 100000)
cdf <- pbeta(x, alpha, beta)
plot(x,cdf, xlab = 'Outcome', ylab = 'Cumulative Probability',
main = 'Beta Distribution',
typ = 'l', lwd = 2, xaxt = 'n', yaxt = 'n')
axis(1, at = seq(from = 0, to = 1, by = 0.1))
axis(2, at = seq(from = 0, to = 1, by = 0.1))
abline(h = seq(from = 0, to = 1, by = 0.05),
lwd = 1, col = 'gray', lty = 3)
abline(v = seq(from = 0, to = 1, by = 0.05),
lwd = 1, col = 'gray', lty = 3)
# Beta distribution
par(mfcol = c(1,1), cex.lab = 1.4, cex.axis = 1.4)
alpha <- 5
beta <- 1
x <- seq(from = 0, to = 1, length = 100000)
cdf <- pbeta(x, alpha, beta)
plot(x,cdf, xlab = 'Outcome', ylab = 'Cumulative Probability',
main = 'Beta Distribution',
typ = 'l', lwd = 2, xaxt = 'n', yaxt = 'n')
axis(1, at = seq(from = 0, to = 1, by = 0.1))
axis(2, at = seq(from = 0, to = 1, by = 0.1))
abline(h = seq(from = 0, to = 1, by = 0.05),
lwd = 1, col = 'gray', lty = 3)
abline(v = seq(from = 0, to = 1, by = 0.05),
lwd = 1, col = 'gray', lty = 3)
qartiles <- qbeta(c(0.25, 0.5, 0.75), alpha, beta)
quartiles <- qbeta(c(0.25, 0.5, 0.75), alpha, beta)
quartiles
cum.prob <- c(0.25, 0.5, 0.75)
quartiles <- qbeta(cum.prob, alpha, beta)
for (i in 1:length(quartiles)){
lines(c(0,rep(quartiles[i],2)),
c(rep(cum.prob[i],2),0),
lwd = 2, col = 'red')
}
t <- seq(from = -5, to = 5, length = 1000)
n <- c(2,3,4,5,10,20,50,10000)
df <- n - 1
cols <- viridis(length(n), direction = -1)
plot(t,t, typ = 'n', xlab = 't-Statistic', ylab = 'Probability Density',
main = 't-Distribution', ylim = c(0,1/sqrt(2*pi)), cex.lab = 1.3,
cex.main = 1.3)
for (i in 1:length(df)){
pdf.t <- dt(t, df[i])
lines(t, pdf.t, col = cols[i], lwd = 2)
}
ldg.names <- paste('Sample size = ', n, sep = '')
legend('topleft', legend = ldg.names, col = cols, lwd = 2,
bty = 'n')
chi <- seq(from = 0, to = 20, length = 1000)
pdf.chi <- dchisq(chi, df = 5)
plot(chi,pdf.chi, xlab = '', ylab = 'Probability Density',
main = 'Chi-Squared Distribution',
lwd = 3, typ = 'l')
null.p <- 0.5
real.p <- 0.5167 # Presumed real p value
effect.size <- real.p - null.p
sample.size <- 60
alpha <- 0.05
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/nicholaskortessis/Library/CloudStorage/GoogleDrive-kortessn@wfu.edu/My Drive/Import/Wake Forest/Teaching/24-25/2025 - Spring/BIO 380/Lab/Wk8')
read.table(worms.txt, header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/nicholaskortessis/Library/CloudStorage/GoogleDrive-kortessn@wfu.edu/My Drive/Import/Wake Forest/Teaching/24-25/2025 - Spring/BIO 380/Lab/Wk8')
read.table(worms.txt, header = TRUE)
getwd()
setwd("/Users/nicholaskortessis/Library/CloudStorage/GoogleDrive-kortessn@wfu.edu/My Drive/Import/Wake Forest/Teaching/24-25/2025 - Spring/BIO 380/Lab/Wk8")
read.table(file = 'worms.txt', header = T)
worms.df <- read.table(worms.txt, header = TRUE)
