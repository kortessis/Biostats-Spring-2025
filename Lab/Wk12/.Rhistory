xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups',
xlim = c(-5,5))
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5))
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
sd <- 1.3
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups')
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5))
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
library(viridisLite)
colors <- viridis(3, alpha = 0.5, begin = 0.15, end = 0.85)
par(mfcol = c(2,2))
sd <- 0.2
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups',
xlim = c(-5,5))
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5), ylab = 'Group')
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
axis(2, at = 1:3, labels = c("A", "B", "C"))
sd <- 1.3
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups')
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5))
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
library(viridisLite)
colors <- viridis(3, alpha = 0.5, begin = 0.15, end = 0.85)
par(mfcol = c(2,2))
sd <- 0.2
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups',
xlim = c(-5,5))
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
legend()
library(viridisLite)
colors <- viridis(3, alpha = 0.5, begin = 0.15, end = 0.85)
par(mfcol = c(2,2))
sd <- 0.2
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups',
xlim = c(-5,5))
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5), ylab = 'Group')
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
axis(2, at = 1:3, labels = c("A", "B", "C"))
sd <- 1.3
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups')
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5))
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
library(viridisLite)
colors <- viridis(3, alpha = 0.5, begin = 0.15, end = 0.85)
par(mfcol = c(2,2))
sd <- 0.2
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups',
xlim = c(-5,5))
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5), ylab = 'Group')
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
axis(2, at = 1:3, labels = c("A", "B", "C"))
sd <- 1.3
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups')
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5))
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
library(viridisLite)
colors <- viridis(3, alpha = 0.5, begin = 0.15, end = 0.85)
par(mfcol = c(2,2))
sd <- 0.2
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups',
xlim = c(-5,5))
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5), ylab = 'Group')
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
axis(2, at = 1:3, labels = c("A", "B", "C"))
sd <- 1.3
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups')
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5))
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
axis(2, at = 1:3, labels = c("A", "B", "C"))
library(viridisLite)
colors <- viridis(3, alpha = 0.5, begin = 0.15, end = 0.85)
par(mfcol = c(2,2))
sd <- 0.2
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups',
xlim = c(-5,5))
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5), ylab = 'Group')
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
axis(2, at = 1:3, labels = c("A", "B", "C"))
sd <- 1.3
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups')
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5), ylab = 'Group')
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
axis(2, at = 1:3, labels = c("A", "B", "C"))
setwd("/Users/nicholaskortessis/Library/CloudStorage/GoogleDrive-kortessn@wfu.edu/.shortcut-targets-by-id/1pChKwu6ONXS5a12mjmSTYEPyL5pbN6eM/R_COURSE_2024/W06")
if (!("car" %in% installed.packages())){
install.packages("car")
}
library(car)
df.k<-read.csv("data/knees.csv")
str(df.k)
# Do we have a balanced design?
tapply(df.k$shift, df.k$treatment, length)
# Let's make a plot
par(mar=c(4,4,1,1))
boxplot(shift~treatment, data=df.k)
m1 <- lm(shift~treatment, data=df.k)
m1
aov(m1)
9.415345/19
anova(m1)
AN1 <- anova(m1)
aov(m1)
AN2 <- aov(m1)
AN2$terms
par(mfrow=c(2,2), mar=c(4,4,2,1))
plot(m1)
setwd("/Users/nicholaskortessis/Library/CloudStorage/GoogleDrive-kortessn@wfu.edu/My Drive/Import/Wake Forest/Teaching/24-25/2025 - Spring/BIO 380/Lab/Wk12")
df.k<-read.csv(file = "knees.csv")
str(df.k)
# Do we have a balanced design?
tapply(df.k$shift, df.k$treatment, length)
# Let's make a plot
par(mar=c(4,4,1,1))
boxplot(shift~treatment, data=df.k)
boxplot(shift ~ treatment, data = df.k)
boxplot(shift ~ treatment, data = df.k)
stripchart(subset(df.k, subset = treatment == 'control'), at = 1, add = T)
subset(df.k, subset = treatment == 'control')
boxplot(shift ~ treatment, data = df.k)
stripchart(subset(df.k, subset = treatment == 'control')$shift, at = 1, add = T)
boxplot(shift ~ treatment, data = df.k)
stripchart(subset(df.k, subset = treatment == 'control')$shift, at = 1, add = T)
boxplot(shift ~ treatment, data = df.k)
stripchart(subset(df.k, subset = treatment == 'control')$shift, at = 1, add = T,
vertical = T)
boxplot(shift ~ treatment, data = df.k)
stripchart(subset(df.k, subset = treatment == 'control')$shift, at = 1, add = T,
vertical = T, pch = 19, method = 'jitter')
boxplot(shift ~ treatment, data = df.k)
stripchart(subset(df.k, subset = treatment == 'control')$shift, at = 1, add = T,
vertical = T, pch = 19, method = 'jitter')
stripchart(subset(df.k, subset = treatment == 'eyes')$shift, at = 2, add = T,
vertical = T, pch = 19, method = 'jitter')
stripchart(subset(df.k, subset = treatment == 'knee')$shift, at = 3, add = T,
vertical = T, pch = 19, method = 'jitter')
aggregate(shift ~ treatment, data = df.k, length)
library(viridisLite)
cols <- viridis(3, begin = 0.2, end = 0.8)
boxplot(shift ~ treatment, data = df.k, color = cols)
stripchart(subset(df.k, subset = treatment == 'control')$shift, at = 1, add = T,
vertical = T, pch = 19, method = 'jitter', col = cols[1])
stripchart(subset(df.k, subset = treatment == 'eyes')$shift, at = 2, add = T,
vertical = T, pch = 19, method = 'jitter')
stripchart(subset(df.k, subset = treatment == 'knee')$shift, at = 3, add = T,
vertical = T, pch = 19, method = 'jitter')
library(viridisLite)
cols <- viridis(3, begin = 0.2, end = 0.8)
boxplot(shift ~ treatment, data = df.k, col = cols)
stripchart(subset(df.k, subset = treatment == 'control')$shift, at = 1, add = T,
vertical = T, pch = 19, method = 'jitter', col = cols[1])
stripchart(subset(df.k, subset = treatment == 'eyes')$shift, at = 2, add = T,
vertical = T, pch = 19, method = 'jitter')
stripchart(subset(df.k, subset = treatment == 'knee')$shift, at = 3, add = T,
vertical = T, pch = 19, method = 'jitter')
library(viridisLite)
cols <- viridis(3, begin = 0.2, end = 0.8)
boxplot(shift ~ treatment, data = df.k, col = cols)
stripchart(subset(df.k, subset = treatment == 'control')$shift, at = 1, add = T,
vertical = T, pch = 19, method = 'jitter')
stripchart(subset(df.k, subset = treatment == 'eyes')$shift, at = 2, add = T,
vertical = T, pch = 19, method = 'jitter')
stripchart(subset(df.k, subset = treatment == 'knee')$shift, at = 3, add = T,
vertical = T, pch = 19, method = 'jitter')
aov(m1)
Anova(m1)
par(mfrow=c(2,2), mar=c(4,4,2,1))
plot(m1)
# R stores a long list of information about your model:
str(m1)
if (!("car" %in% installed.packages())){
install.packages("car")
}
library(car)
## Way 1: The aov() command requires summary()
summary(aov(m1))
## Way 2: anova()
anova(m1)
## Way 3: Anova()
### Type II SS
Anova(m1, type=2)
### Type III SS
## Before we implement Type III SS, we first have to tell R that all our
## factor levels are equivalent in the eyes of the researcher:
options(contrasts=c("contr.treatment", "contr.poly"))
Anova(m1, type=3)
?TukeyHSD
### Unfortunately, TukeyHSD only works with the "aov" command:
TukeyHSD(aov(m1))
par(mfcol = c(1,1))
plot(TukeyHSD(aov(m1)))
# I love these plots - but we could make them more attractive.
# How would you make this figure 'publication quality'?
pairwise.t.test(df.k$shift, df.k$treatment, p.adjust.method="BH")
aov(m1)
summary(aov(m1))
Anova(m1)
pairwise.t.test(df.k$shift, df.k$treatment, p.adjust.method="BH")
### Unfortunately, TukeyHSD only works with the "aov" command:
TukeyHSD(aov(m1))
df.g <- read.table("snailgrowth.csv", sep=',', header=TRUE)
str(df.g)
df.g$temp.C <- as.factor(df.g$temp.C)
df.g$sal.ppm <- as.factor(df.g$sal.ppm)
str(df.g)
# Basic plot
par(mfrow=c(1,1))
boxplot(growth.mm~sal.ppm*temp.C, data=df.g)
# Do we have a balanced design
tapply(df.g$growth.mm, list(df.g$sal.ppm, df.g$temp.C), length)
# Make a lm
m2 <- lm(growth.mm~sal.ppm*temp.C, data=df.g)
# Check assumptions
par(mfrow=c(1,1), mar=c(4,4,4,1))
plot(m2)
anova(lm(growth.mm~sal.ppm*temp.C, data=df.g))
anova(lm(growth.mm~temp.C*sal.ppm, data=df.g))
## Way 3: Anova()
### Type II SS
Anova(m2, type=2)
### Type III SS
## Before we implement Type III SS, we first have to tell R that all our factor leves are equivalent:
options(contrasts=c("contr.treatment", "contr.poly"))
Anova(m2, type=3)
### Post-hoc comparisons
TukeyHSD(aov(m2))
plot(TukeyHSD(aov(m2)))
group <- paste( df.g$sal.ppm,df.g$temp.C, sep=".")
pairwise.t.test(df.g$growth.mm, group, p.adjust.method = "bonferroni")
tapply(df.g$growth.mm, group, mean)
#    20.10    20.15    30.10    30.15
# 1.132264 2.150755 1.648887 1.867930
#    a         b       c         c
# Conclude:   At 10C, growth increased with salinity, but at 15C, growth decreased with salinity. At 30ppm, temp had no effect on growth.  At 20ppm, temp had a positive effect on growth.
aov(m1)
summary(aov(m1))
Anova(m1)
thing <- aov(m1)
thing$coefficients
thing$effects
thing$rank
thing$fitted.values
plot(thing$fitted.values)
points(thing$fitted.values + thing$residuals)
thing$contrasts
thing$df.residual
F.values <- seq(from = 0, to = 10, length = 1000)
F.prob <- df(F.values, df1 = 2, df2 = 19)
plot(F.values, F.prob, xlab = 'F-statistic', ylab = 'Probability Density',
main = 'F Distribution for 3 groups and 22 individuals',
type = 'l', lwd = 2)
thing$terms
thing$assign
aov(m1)
summary(aov(m1))
Anova(m1)
summary.aov(m1)
thing <- Anova(m1)
thing$`F value`
thing <- summary.aov(m1)
#Store ANOVA results
m1.ANOVA <- Anova(m1)
# Pull out and plot the F-value
abline(v = m1.ANOVA$'F value')
F.values <- seq(from = 0, to = 10, length = 1000)
F.prob <- df(F.values, df1 = 2, df2 = 19)
plot(F.values, F.prob, xlab = 'F-statistic', ylab = 'Probability Density',
main = 'F Distribution for 3 groups and 22 individuals',
type = 'l', lwd = 2)
#Store ANOVA results
m1.ANOVA <- Anova(m1)
# Pull out and plot the F-value
abline(v = m1.ANOVA$'F value', lty = 2, col = 'red', lwd = 2)
F.values <- seq(from = 0, to = 10, length = 1000)
F.prob <- df(F.values, df1 = 2, df2 = 19)
plot(F.values, F.prob, xlab = 'F-statistic', ylab = 'Probability Density',
main = 'F Distribution for 3 groups and 22 individuals',
type = 'l', lwd = 2)
#Store ANOVA results
m1.ANOVA <- Anova(m1)
# Pull out and plot the F-value
abline(v = m1.ANOVA$'F value', lty = 2, col = 'red', lwd = 2)
# Chunk 1
library(viridisLite)
colors <- viridis(3, alpha = 0.5, begin = 0.15, end = 0.85)
par(mfcol = c(2,2))
sd <- 0.2
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups',
xlim = c(-5,5))
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5), ylab = 'Group')
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
axis(2, at = 1:3, labels = c("A", "B", "C"))
sd <- 1.3
mu <- c(-1,0,1)
x <- seq(-5,5,length = 1000)
plot(x, dnorm(x,mu[1],sd), typ = 'l',
xlab = 'Individual Characteristic',
ylab = 'Probability', main = 'Distribution of Groups')
for (i in 1:length(mu)){
polygon(c(x,x[1]), c(dnorm(x,mu[i],sd),0), col = colors[i])
}
n <- 20
stripchart(rnorm(n, mu[1], sd), pch = 19, col = colors[1],
xlim = c(-5,5), at = 1, method = 'jitter',
ylim = c(0.5,3.5), ylab = 'Group')
stripchart(rnorm(n, mu[2], sd), pch = 19, col = colors[2],
at = 2, add = T, method = 'jitter')
stripchart(rnorm(n, mu[3], sd), pch = 19, col = colors[3],
at = 3, add = T, method = 'jitter')
axis(2, at = 1:3, labels = c("A", "B", "C"))
# Chunk 2
setwd("/Users/nicholaskortessis/Library/CloudStorage/GoogleDrive-kortessn@wfu.edu/My Drive/Import/Wake Forest/Teaching/24-25/2025 - Spring/BIO 380/Lab/Wk12")
# Chunk 3
df.k<-read.csv(file = "knees.csv")
str(df.k)
# Chunk 4
boxplot(shift ~ treatment, data = df.k)
# Chunk 5
boxplot(shift ~ treatment, data = df.k)
stripchart(subset(df.k, subset = treatment == 'control')$shift, at = 1, add = T,
vertical = T, pch = 19, method = 'jitter')
stripchart(subset(df.k, subset = treatment == 'eyes')$shift, at = 2, add = T,
vertical = T, pch = 19, method = 'jitter')
stripchart(subset(df.k, subset = treatment == 'knee')$shift, at = 3, add = T,
vertical = T, pch = 19, method = 'jitter')
# Chunk 6
library(viridisLite)
cols <- viridis(3, begin = 0.2, end = 0.8)
boxplot(shift ~ treatment, data = df.k, col = cols)
stripchart(subset(df.k, subset = treatment == 'control')$shift, at = 1, add = T,
vertical = T, pch = 19, method = 'jitter')
stripchart(subset(df.k, subset = treatment == 'eyes')$shift, at = 2, add = T,
vertical = T, pch = 19, method = 'jitter')
stripchart(subset(df.k, subset = treatment == 'knee')$shift, at = 3, add = T,
vertical = T, pch = 19, method = 'jitter')
# Chunk 7
m1 <- lm(shift~treatment, data=df.k)
# Chunk 8
aov(m1)
summary(aov(m1))
Anova(m1)
