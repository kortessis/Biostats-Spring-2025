plot(inf.prevalence, outcomes.probs, pch = 19, xlab = "# Infected Frogs in Sample", ylab = "Probability", main = "Sampling Distribution for Number of Infected Frogs")
#Checkpoint 1
num.frogs.sampled <- 100
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = "# Infected Frogs in Sample", ylab = "Probability", main = "Sampling Distribution for Number of Infected Frogs")
pbinom(c(30,90), 100, 0.6)
num.frogs.sampled <- 30
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
cumul.prob <- pbinom(poss.outcomes, size = num.frogs.sampled, p = prob.inf)
plot(inf.prevalence, cumul.prob, pch = 19, xlab = "Infection Prevalence in a Sample", ylab = "Cumulative Probability")
qbinom(0.25, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.75, size = num.frogs.sampled, prob = prob.inf)
#30% and 90% are reasonalble bounds
################# NK Comments #################
# 30% and 90% are a bit more than reasonable. The chance of getting something
# outside this range (<30 and >90) is
qbinom(0.9*num.frogs.sampled, num.frogs.sampled, prob.inf)-
qbinom(0.3*num.frogs.sampled, num.frogs.sampled, prob.inf)-
################# NK Comments #################
num.frogs.sampled <- 30
#30% and 90% are reasonalble bounds
################# NK Comments #################
# 30% and 90% are a bit more than reasonable. The chance of getting something
# outside this range (<30 and >90) is
qbinom(0.9*num.frogs.sampled, num.frogs.sampled, prob.inf)-
qbinom(0.3*num.frogs.sampled, num.frogs.sampled, prob.inf)
#30% and 90% are reasonalble bounds
################# NK Comments #################
# 30% and 90% are a bit more than reasonable. The chance of getting something
# outside this range (<30 and >90) is
qbinom(0.9*num.frogs.sampled, num.frogs.sampled, prob.inf)-qbinom(0.3*num.frogs.sampled, num.frogs.sampled, prob.inf)
#30% and 90% are reasonalble bounds
################# NK Comments #################
# 30% and 90% are a bit more than reasonable. The chance of getting something
# outside this range (<30 and >90) is
pbinom(0.9*num.frogs.sampled, num.frogs.sampled, prob.inf)-pbinom(0.3*num.frogs.sampled, num.frogs.sampled, prob.inf)
#30% and 90% are reasonalble bounds
################# NK Comments #################
# 30% and 90% are a bit more than reasonable. The chance of getting something
# outside this range (<30 and >90) is 0.999
1 - (pbinom(0.9*num.frogs.sampled, num.frogs.sampled, prob.inf)-pbinom(0.3*num.frogs.sampled, num.frogs.sampled, prob.inf))
num.frogs.sampled <- 30
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
cumul.prob <- pbinom(poss.outcomes, size = num.frogs.sampled, p = prob.inf)
plot(inf.prevalence, cumul.prob, pch = 19, xlab = "Infection Prevalence in a Sample", ylab = "Cumulative Probability")
qbinom(0.25, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.75, size = num.frogs.sampled, prob = prob.inf)
plot(inf.prevalence, outcomes.probs, pch = 19,xlab = "# Infected Frogs in Sample', ylab = 'Probability", main = "Sampling Distribution for Infection Prevalence")
abline(v = c(16,20)/num.frogs.sampled, lty = 2, col = "red")
qbinom(0.025, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.975, size = num.frogs.sampled, prob = prob.inf)
plot(inf.prevalence, outcomes.probs, pch = 19,xlab = "# Infected Frogs in Sample', ylab = 'Probability", main = "Sampling Distribution for Infection Prevalence")
abline(v = c(13,23)/num.frogs.sampled, lty = 2, col = "red")
#Checkpoint 2
num.frogs.sampled <- 100
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = "# Infected Frogs in Sample", ylab = "Probability", main = "Sampling Distribution for Infection Prevalence")
p.20.frogs <- qbinom(0.2, size = num.frogs.sampled, prob = prob.inf)
p.80.frogs <- qbinom(0.8, size = num.frogs.sampled, prob = prob.inf)
abline(v = c(p.20.frogs,p.80.frogs)/num.frogs.sampled, lty = 2, col = "red")
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = "# Infected Frogs in Sample", ylab = "Probability", main = "Sampling Distribution for Infection Prevalence")
p.2.5.frogs <- qbinom(0.025, size = num.frogs.sampled, prob = prob.inf)
p.97.5.frogs <- qbinom(0.975, size = num.frogs.sampled, prob = prob.inf)
abline(v = c(p.2.5.frogs,p.97.5.frogs)/num.frogs.sampled, lty = 2, col = "red")
#Checkpoint 2
num.frogs.sampled <- 100
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = "# Infected Frogs in Sample", ylab = "Probability", main = "Sampling Distribution for Infection Prevalence")
p.20.frogs <- qbinom(0.2, size = num.frogs.sampled, prob = prob.inf)
p.80.frogs <- qbinom(0.8, size = num.frogs.sampled, prob = prob.inf)
abline(v = c(p.20.frogs,p.80.frogs)/num.frogs.sampled, lty = 2, col = "red")
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = "# Infected Frogs in Sample", ylab = "Probability", main = "Sampling Distribution for Infection Prevalence")
p.2.5.frogs <- qbinom(0.025, size = num.frogs.sampled, prob = prob.inf)
p.97.5.frogs <- qbinom(0.975, size = num.frogs.sampled, prob = prob.inf)
abline(v = c(p.2.5.frogs,p.97.5.frogs)/num.frogs.sampled, lty = 2, col = "red")
fish.size.sd <- 10
sample.size <- 20
SE.mean.fish.size <- fish.size.sd/sqrt(sample.size)
SE.mean.fish.size
#Checkpoint 5
fish.size.sd/sqrt(30)
fish.size.sd/sqrt(50)
fish.size.sd/sqrt(100)
sample.sizes <- seq(from = 1, to = 100, by = 1)
sd.fish.length <- 5
SE.mean <- sd.fish.length/sqrt(sample.sizes)
plot(sample.sizes, SE.mean, typ = "o", pch = 19, xlab = "Number of Fish In Sample", ylab = "Standard Error of the Mean", ylim = c(0,5))
abline(h = 0, lty = 2)
diabetes.df <- read.csv(file = "diabetes.csv")
str(diabetes.df)
hist(diabetes.df$chol, xlab = "Cholesterol")
summary(diabetes.df$chol)
new.diabetes.df <- subset(diabetes.df, subset = !(is.na(chol)))
summary(new.diabetes.df$chol)
chol.mean <- mean(new.diabetes.df$chol)
chol.n <- length(new.diabetes.df$chol)
(chol.se <- sd(diabetes.df$chol, na.rm = T)/sqrt(chol.n))
possible.mean.chol <- seq(from = 150, to = 250, length = 10000)
poss.mean.prob <- dnorm(possible.mean.chol, mean = chol.mean, sd = chol.se)
plot(possible.mean.chol, poss.mean.prob, typ = "l", xlab = "Cholesterol Means", lwd = 3, ylab = "Probability", xlim = c(195,220))
sampl.quantiles <- qnorm(c(0.025, 0.975), mean = chol.mean, sd = chol.se)
sampl.quantiles
plot(possible.mean.chol, poss.mean.prob, typ = "l", xlab = "Cholesterol Means", lwd = 3, ylab = "Probability", xlim = c(195,220))
abline(v = sampl.quantiles, col = "red", lty = 2)
abline(v = chol.mean, col = "black", lty = 2, lwd = 3)
#Checkpoint 7
plot(possible.mean.chol, poss.mean.prob, typ = "l", xlab = "Cholesterol Means", lwd = 3, ylab = "Probability", xlim = c(195,220))
sampl.quantiles.90 <- qnorm(c(0.05, 0.95), mean = chol.mean, sd = chol.se)
abline(v = sampl.quantiles.90, col = "red", lty = 2)
abline(v = chol.mean, col = "black", lty = 2, lwd = 3)
our.model <- lm(chol ~ 1, data = new.diabetes.df)
confint(our.model, level = 0.95)
#Checkpoint 9
confint(our.model, level = 0.99)
our.model.height <- lm(height ~ 1, data = new.diabetes.df)
confint(our.model.height, level = 0.90)
confint(our.model.height, level = 0.95)
confint(our.model.height, level = 0.99)
num.frogs.sampled <- 5
prob.inf <- 0.6
(poss.outcomes <- 0:num.frogs.sampled)
(outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, p = prob.inf))
plot(poss.outcomes, outcomes.probs, pch = 19,
xlab = '# Infected Frogs in Sample', ylab = 'Probability',
main = 'Sampling Distribution for Number of Infected Frogs')
num.frogs.sampled <- 30
prob.inf <- 0.6
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
plot(inf.prevalence, outcomes.probs, pch = 19,
xlab = '# Infected Frogs in Sample', ylab = 'Probability',
main = 'Sampling Distribution for Infection Prevalence')
# Checkpoint 1: The bounds for reasonable sample prevalence in this case are .5 and .7
num.frogs.sampled <- 100
prob.inf <- 0.6
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
plot(inf.prevalence, outcomes.probs, pch = 19,
xlab = '# Infected Frogs in Sample', ylab = 'Probability',
main = 'Sampling Distribution for Infection Prevalence')
num.frogs.sampled <- 30
cumul.prob <- pbinom(poss.outcomes, size = num.frogs.sampled, p = prob.inf)
plot(inf.prevalence, cumul.prob, pch = 19, xlab = 'Infection Prevalence in a Sample',
ylab = 'Cumulative Probability')
qbinom(0.25, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.75, size = num.frogs.sampled, prob = prob.inf)
plot(inf.prevalence, outcomes.probs, pch = 19,
xlab = '# Infected Frogs in Sample', ylab = 'Probability',
main = 'Sampling Distribution for Infection Prevalence')
abline(v = c(16,20)/num.frogs.sampled,
lty = 2,
col = 'red')
qbinom(0.025, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.975, size = num.frogs.sampled, prob = prob.inf)
plot(inf.prevalence, outcomes.probs, pch = 19,
xlab = '# Infected Frogs in Sample', ylab = 'Probability',
main = 'Sampling Distribution for Infection Prevalence')
abline(v = c(13,23)/num.frogs.sampled,
lty = 2,
col = 'red')
# Checkpoint 2:
num.frogs.sampled <- 100
prob.inf <- 0.6
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
qbinom(0.20, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.80, size = num.frogs.sampled, prob = prob.inf)
plot(inf.prevalence, outcomes.probs, pch = 19,
xlab = '# Infected Frogs in Sample', ylab = 'Probability',
main = 'Sampling Distribution for Infection Prevalence')
abline(v = c(56,64)/num.frogs.sampled,
lty = 2,
col = 'red')
# Checkpoint 3:
num.frogs.sampled <- 100
prob.inf <- 0.6
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
qbinom(.025, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.975, size = num.frogs.sampled, prob = prob.inf)
plot(inf.prevalence, outcomes.probs, pch = 19,
xlab = '# Infected Frogs in Sample', ylab = 'Probability',
main = 'Sampling Distribution for Infection Prevalence')
abline(v = c(50,69)/num.frogs.sampled,
lty = 2,
col = 'red')
fish.size.sd <- 10
sample.size <- 20
SE.mean.fish.size <- fish.size.sd/sqrt(sample.size)
SE.mean.fish.size
# Checkpoint 5: For a sample size of 30- standard error is 1.825742, sample size of 50- standard error is 1.414214, sample size of 100- standard error is 1
fish.size.sd <- 10
sample.size1 <- 30
sample.size2 <- 50
sample.size3 <- 100
SE.mean.fish.size1 <- fish.size.sd/sqrt(sample.size1)
SE.mean.fish.size2 <- fish.size.sd/sqrt(sample.size2)
SE.mean.fish.size3 <- fish.size.sd/sqrt(sample.size3)
SE.mean.fish.size1
SE.mean.fish.size2
SE.mean.fish.size3
################# NK Comments #################
# Looks good. You could do this all in one line if you'd like. Use the following
# code:
sample.size <- c(30,50,10)
fish.size.sd/sqrt(sample.size)
sample.sizes <- seq(from = 1, to = 100, by = 1)
sd.fish.length <- 5
SE.mean <- sd.fish.length/sqrt(sample.sizes)
plot(sample.sizes, SE.mean, typ = 'o', pch = 19,
xlab = 'Number of Fish In Sample', ylab = 'Standard Error of the Mean',
ylim = c(0,5))
abline(h = 0, lty = 2)
setwd("~/Desktop/BIO380/Wk5")
diabetes.df <- read.csv(file="diabetes.csv")
str(diabetes.df)
hist(diabetes.df$chol, xlab = 'Cholesterol')
summary(diabetes.df$chol)
new.diabetes.df <- subset(diabetes.df, subset = !(is.na(chol)))
summary(new.diabetes.df$chol)
summary(new.diabetes.df$chol)
chol.mean <- mean(new.diabetes.df$chol)
chol.n <- length(new.diabetes.df$chol)
(chol.se <- sd(diabetes.df$chol, na.rm = T)/sqrt(chol.n))
possible.mean.chol <- seq(from = 150, to = 250, length = 10000)
poss.mean.prob <- dnorm(possible.mean.chol, mean = chol.mean, sd = chol.se)
plot(possible.mean.chol, poss.mean.prob, typ = 'l',
xlab = 'Cholesterol Means', lwd = 3,
ylab = 'Probability', xlim = c(195,220))
sampl.quantiles <- qnorm(c(0.025, 0.975), mean = chol.mean, sd = chol.se)
sampl.quantiles
plot(possible.mean.chol, poss.mean.prob, typ = 'l',
xlab = 'Cholesterol Means', lwd = 3,
ylab = 'Probability', xlim = c(195,220))
abline(v = sampl.quantiles, col = 'red', lty = 2)
abline(v = chol.mean, col = 'black', lty = 2, lwd = 3)
# Checkpoint 7: the 90% confidence interval for the distribution is 204.1996 to 211.4920
sampl.quantiles <- qnorm(c(0.05, 0.95), mean = chol.mean, sd = chol.se)
sampl.quantiles
plot(possible.mean.chol, poss.mean.prob, typ = 'l',
xlab = 'Cholesterol Means', lwd = 3,
ylab = 'Probability', xlim = c(195,220))
abline(v = sampl.quantiles, col = 'red', lty = 2)
abline(v = chol.mean, col = 'black', lty = 2, lwd = 3)
our.model <- lm(chol ~ 1, data = new.diabetes.df)
confint(our.model, level = 0.95)
# Checkpoint 9: the 99% confidence interval is 202.11 to 213.58. This is larger than the 90% confidence interval since there is a wider range of data that the mean could fall into.
our.model <- lm(chol ~ 1, data = new.diabetes.df)
confint(our.model, level = 0.99)
# Checkpoint 10: The 90% confidence interval is 65.69627 to 66.34393, the 95% confidence interval is 65.63395 to 66.40625, the 99% confidence interval is 65.51172 to 66.52848
summary(diabetes.df$height)
new.diabetesforheight.df <- subset(diabetes.df, subset = !(is.na(height)))
summary(new.diabetesforheight.df$height)
height.model <- lm(height ~ 1, data = new.diabetesforheight.df)
confint(height.model, level = 0.90)
confint(height.model, level = 0.95)
confint(height.model, level = 0.99)
#Start of Checkpoint 1
num.frogs.sampled.1 <- 100
prob.inf <- 0.6
poss.outcomes <- 0:num.frogs.sampled.1
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled.1, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled.1
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = '# Infected Frogs in Sample', ylab = 'Probability', main = 'Sampling Distribution for Infection Prevalence')
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = '# Infected Frogs in Sample', ylab = 'Probability', main = 'Sampling Distribution for Infection Prevalence')
abline(v = c(16,20)/num.frogs.sampled, lty = 2, col = 'red')
qbinom(0.025, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.975, size = num.frogs.sampled, prob = prob.inf)
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = '# Infected Frogs in Sample', ylab = 'Probability', main = 'Sampling Distribution for Infection Prevalence')
abline(v = c(13,23)/num.frogs.sampled, lty = 2, col = 'red')
#Start of Checkpoint 2
qbinom(0.20, size = num.frogs.sampled.1, prob = prob.inf)
#Start of Checkpoint 2
qbinom(0.20, size = num.frogs.sampled.1, prob = prob.inf)
qbinom(0.80, size = num.frogs.sampled.1, prob = prob.inf)
#The region of 60% of the most prevalent values ranges from 56 to 64.
poss.outcomes.1 <- 0:num.frogs.sampled.1
outcomes.probs.1 <- dbinom(poss.outcomes.1, size = num.frogs.sampled.1, prob = prob.inf)
inf.prevalence.1 <- poss.outcomes.1/num.frogs.sampled.1
plot(inf.prevalence.1, outcomes.probs.1, pch = 19, xlab = '# Infected Frogs in Sample', ylab = 'Probability', main = 'Sampling Distribution for Infection Prevalence')
abline(v = c(56,64)/num.frogs.sampled.1, lty = 2, col = 'red')
#Start of Checkpoint 3
qbinom(0.025, size = num.frogs.sampled.1, prob = prob.inf)
qbinom(0.975, size = num.frogs.sampled.1, prob = prob.inf)
#The region of 95% of the most prevalent values ranges from 50 to 69.
poss.outcomes.1 <- 0:num.frogs.sampled.1
outcomes.probs.1 <- dbinom(poss.outcomes.1, size = num.frogs.sampled.1, prob = prob.inf)
inf.prevalence.1 <- poss.outcomes.1/num.frogs.sampled.1
plot(inf.prevalence.1, outcomes.probs.1, pch = 19, xlab = '# Infected Frogs in Sample', ylab = 'Probability', main = 'Sampling Distribution for Infection Prevalence')
abline(v = c(50,69)/num.frogs.sampled.1, lty = 2, col = 'red')
#SE with a sample size of 100 is 1
#End of Checkpoint 5
################# NK Comments #################
# You could do this all in three lines. Like this:
fish.size.sd <- 10
sample.size <- c(30,50,100)
(SE.mean <- fish.size.sd/sqrt(sample.size))
sample.sizes <- seq(from = 1, to = 100, by = 1)
sd.fish.length <- 5
SE.mean <- sd.fish.length/sqrt(sample.sizes)
plot(sample.sizes, SE.mean, typ = 'o', pch = 19, xlab = 'Number of Fish In Sample', ylab = 'Standard Error of the Mean', ylim = c(0,5))
abline(h = 0, lty = 2)
diabetes.df <- read.csv(file = 'diabetes.df.csv')
str(diabetes.df)
hist(diabetes.df$chol, xlab = 'Cholesterol')
summary(diabetes.df$chol)
new.diabetes.df <- subset(diabetes.df, subset = !(is.na(chol)))
summary(new.diabetes.df$chol)
chol.mean <- mean(new.diabetes.df$chol)
chol.n <- length(new.diabetes.df$chol)
(chol.se <- sd(diabetes.df$chol, na.rm = T)/sqrt(chol.n))
possible.mean.chol <- seq(from = 150, to = 250, length = 10000)
poss.mean.prob <- dnorm(possible.mean.chol, mean = chol.mean, sd = chol.se)
plot(possible.mean.chol, poss.mean.prob, typ = 'l', xlab = 'Cholesterol Means', lwd = 3, ylab = 'Probability', xlim = c(195,220))
sampl.quantiles <- qnorm(c(0.025, 0.975), mean = chol.mean, sd = chol.se)
sampl.quantiles
plot(possible.mean.chol, poss.mean.prob, typ = 'l', xlab = 'Cholesterol Means', lwd = 3, ylab = 'Probability', xlim = c(195,220))
abline(v = sampl.quantiles, col = 'red', lty = 2)
abline(v = chol.mean, col = 'black', lty = 2, lwd = 3)
#Start of Checkpoint 7
sampl.quantiles.1 <- qnorm(c(0.05, 0.95), mean = chol.mean, sd = chol.se)
sampl.quantiles.1
#Start of Checkpoint 7
sampl.quantiles.1 <- qnorm(c(0.05, 0.95), mean = chol.mean, sd = chol.se)
sampl.quantiles.1
#The 90% confidence interval for the mean of cholestrol in this population ranges from 204.1996 to 211.4920.
plot(possible.mean.chol, poss.mean.prob, typ = 'l', xlab = 'Cholesterol Means', lwd = 3, ylab = 'Probability', xlim = c(195,220))
abline(v = sampl.quantiles.1, col = 'red', lty = 2)
abline(v = chol.mean, col = 'black', lty = 2, lwd = 3)
our.model <- lm(chol ~ 1, data = new.diabetes.df)
#Start of Checkpoint 9
our.model.9 <- lm(chol ~ 1, data = new.diabetes.df)
confint(our.model.9, level = 0.99)
#Start of Checkpoint 10
height.diabetes.df <- subset(diabetes.df, subset = !(is.na(height)))
summary(height.diabetes.df$height)
our.model.9 <- lm(height ~ 1, data = height.diabetes.df)
confint(our.model.9, level = 0.90)
#The 90% confidence interval is 65.69627 to 66.34393
confint(our.model.9, level = 0.95)
#The 90% confidence interval is 65.63395 to 66.40625
confint(our.model.9, level = 0.99)
height.diabetes.df
str(height.diabetes.df)
str(diabetes.df)
confint(lm(height~1, data = diabetes.df))
confint(lm(height~1, data = diabetes.df), level = 0.99)
read.csv('diabetes.csv')
##Checkpoint 1: Plot the sampling distribution of infection prevalence when we sample 100 frogs. What are the bounds on reasonable sample prevalence in this case?
num.frogs.sampled <- 100
prob.inf <- 0.6
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
plot(inf.prevalence, outcomes.probs, pch = 19,xlab = '# Infected Frogs in Sample', ylab = 'Probability',main = 'Sampling Distribution for Infection Prevalence')
##Checkpoint 2: Find the region of 60% of the most likely prevalence values for a sample of 100 frogs. Plot the boundaries on your probability distribution from checkpoint 1.
num.frogs.sampled <- 100
plot(inf.prevalence, outcomes.probs, pch = 19,xlab = '# Infected Frogs in Sample', ylab = 'Probability',main = 'Sampling Distribution for Infection Prevalence')
qbinom(0.60, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.40, size = num.frogs.sampled, prob = prob.inf)
abline(v = c(59,61)/num.frogs.sampled,lty = 2,col = 'red')
## Checkpoint 3: Now do the same for the region of 95% of the most likely sample prevalences.
qbinom(0.95, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.05, size = num.frogs.sampled, prob = prob.inf)
abline(v = c(52,68)/num.frogs.sampled,lty = 2,col = 'red')
## Checkpoint 5: What is SE  ̄X when we sample 30 fish, 50 fish, and 100 fish?
sample.size <- 30
SE.mean.fish.size <- fish.size.sd/sqrt(sample.size)
SE.mean.fish.size
## 1.8257
sample.size <- 50
SE.mean.fish.size <- fish.size.sd/sqrt(sample.size)
SE.mean.fish.size
## 1.414
sample.size <- 100
SE.mean.fish.size <- fish.size.sd/sqrt(sample.size)
SE.mean.fish.size
setwd("/Users/nicholaskortessis/Library/CloudStorage/GoogleDrive-kortessn@wfu.edu/My Drive/Import/Wake Forest/Teaching/24-25/2025 - Spring/BIO 380/Lab/Wk5")
diabetes.df <- read.csv(file = 'diabetes.csv')
hist(diabetes.df$chol, xlab = 'Cholesterol')
summary(diabetes.df$chol)
is.na(chol)
##Checkpoint 7: Find the 90% confidence interval for the mean of cholesterol in this population.
sampl.quantiles <- qnorm(c(0.10, 0.90))
abline(v = sampl.quantiles, col = 'red', lty = 2)
chol.mean <- mean(new.diabetes.df$chol)
chol.n <- length(new.diabetes.df$chol)
(chol.se <- sd(diabetes.df$chol, na.rm = T)/sqrt(chol.n))
possible.mean.chol <- seq(from = 150, to = 250, length = 10000)
poss.mean.prob <- dnorm(possible.mean.chol, mean = chol.mean, sd = chol.se)
plot(possible.mean.chol, poss.mean.prob, typ = 'l',xlab = 'Cholesterol Means', lwd = 3,ylab = 'Probability', xlim = c(195,220))
sampl.quantiles <- qnorm(c(0.025, 0.975),mean = chol.mean, sd = chol.se)
sampl.quantiles
plot(possible.mean.chol, poss.mean.prob, typ = 'l',
xlab = 'Cholesterol Means', lwd = 3,
ylab = 'Probability', xlim = c(195,220))
abline(v = sampl.quantiles, col = 'red', lty = 2)
abline(v = chol.mean, col = 'black', lty = 2, lwd = 3)
##Checkpoint 7: Find the 90% confidence interval for the mean of cholesterol in this population.
sampl.quantiles <- qnorm(c(0.10, 0.90))
abline(v = sampl.quantiles, col = 'red', lty = 2)
sampl.quantiles_90 <- qnorm(c(0.05, 0.95), mean = chol.mean,  sd = chol.se)
## Checkpoint 8:
sampl.quantiles_99 <- qnorm(c(0.005, 0.995),  mean = chol.mean, sd = chol.se)
sampl.quantiles_99
## checkpoint 9:
height.mean <- mean(diabetes.df$height)
height.sd <- sd(diabetes.df$height)
height.se <- height.sd / sqrt(length(diabetes.df$height))
height.quantiles_90 <- qnorm(c(0.05, 0.95), mean = height.mean, sd = height.se)
height.quantiles_95 <- qnorm(c(0.025, 0.975), mean = height.mean, sd = height.se)
height.quantiles_99 <- qnorm(c(0.005, 0.995), mean = height.mean, sd = height.se)
height.quantiles_90
height.quantiles_95
height.quantiles_99
num.frogs.sampled <- 100
prob.inf <- 0.6
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = '# Infected Frogs in Sample', ylab = 'Probability', main = 'Sampling Distribution for Infection Prevalence')
qbinom(0.2, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.8, size = num.frogs.sampled, prob = prob.inf)
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = '# Infected Frogs in Sample', ylab = 'Probability', main = 'Sampling Distribution for Infection Prevalence')
abline(v = c(56,64)/num.frogs.sampled, lty = 2, col = 'red')
num.frogs.sampled <- 100
prob.inf <- 0.6
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = '# Infected Frogs in Sample', ylab = 'Probability', main = 'Sampling Distribution for Infection Prevalence')
qbinom(0.2, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.8, size = num.frogs.sampled, prob = prob.inf)
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = '# Infected Frogs in Sample', ylab = 'Probability', main = 'Sampling Distribution for Infection Prevalence')
abline(v = c(56,64)/num.frogs.sampled, lty = 2, col = 'red')
num.frogs.sampled <- 100
prob.inf <- 0.6
poss.outcomes <- 0:num.frogs.sampled
outcomes.probs <- dbinom(poss.outcomes, size = num.frogs.sampled, prob = prob.inf)
inf.prevalence <- poss.outcomes/num.frogs.sampled
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = '# Infected Frogs in Sample', ylab = 'Probability', main = 'Sampling Distribution for Infection Prevalence')
qbinom(0.025, size = num.frogs.sampled, prob = prob.inf)
qbinom(0.975, size = num.frogs.sampled, prob = prob.inf)
plot(inf.prevalence, outcomes.probs, pch = 19, xlab = '# Infected Frogs in Sample', ylab = 'Probability', main = 'Sampling Distribution for Infection Prevalence')
abline(v = c(50,69)/num.frogs.sampled, lty = 2, col = 'red')
sample.sizes <- seq(from = 1, to = 100, by = 1)
sd.fish.length <- 5
SE.mean <- sd.fish.length/sqrt(sample.sizes)
plot(sample.sizes, SE.mean, typ = 'o', pch = 19,
xlab = 'Number of Fish In Sample', ylab = 'Standard Error of the Mean', ylim = c(0,5))
abline(h = 0, lty = 2)
str(diabetes.df)
hist(diabetes.df$chol, xlab = 'Cholesterol')
summary(diabetes.df$chol)
new.diabetes.df <- subset(diabetes.df, subset = !(is.na(chol)))
summary(new.diabetes.df$chol)
chol.mean <- mean(new.diabetes.df$chol)
chol.n <- length(new.diabetes.df$chol)
(chol.se <- sd(diabetes.df$chol, na.rm = T)/sqrt(chol.n))
possible.mean.chol <- seq(from = 150, to = 250, length = 10000)
poss.mean.prob <- dnorm(possible.mean.chol, mean = chol.mean, sd = chol.se)
plot(possible.mean.chol, poss.mean.prob, typ = 'l', xlab = 'Cholesterol Means', lwd = 3, ylab = 'Probability', xlim = c(195,220))
sampl.quantiles <- qnorm(c(0.025, 0.975), mean = chol.mean,  sd = chol.se)
sampl.quantiles
plot(possible.mean.chol, poss.mean.prob, typ = 'l', xlab = 'Cholesterol Means', lwd = 3, ylab = 'Probability', xlim = c(195,220))
abline(v = sampl.quantiles, col = 'red', lty = 2)
abline(v = chol.mean, col = 'black', lty = 2, lwd = 3)
chol.mean <- mean(new.diabetes.df$chol)
chol.n <- length(new.diabetes.df$chol)
(chol.se <- sd(diabetes.df$chol, na.rm = T)/sqrt(chol.n))
possible.mean.chol <- seq(from = 150, to = 250, length = 10000)
poss.mean.prob <- dnorm(possible.mean.chol, mean = chol.mean, sd = chol.se)
plot(possible.mean.chol, poss.mean.prob, typ = 'l', xlab = 'Cholesterol Means', lwd = 3, ylab = 'Probability', xlim = c(195,220))
sampl.quantiles <- qnorm(c(0.05, 0.95), mean = chol.mean,  sd = chol.se)
sampl.quantiles
plot(possible.mean.chol, poss.mean.prob, typ = 'l', xlab = 'Cholesterol Means', lwd = 3, ylab = 'Probability', xlim = c(195,220))
abline(v = sampl.quantiles, col = 'red', lty = 2)
abline(v = chol.mean, col = 'black', lty = 2, lwd = 3)
our.model <- lm(chol ~ 1, data = new.diabetes.df)
confint(our.model, level = 0.99)
height.mean <- mean(new.diabetes.df$height)
height.n <- length(new.diabetes.df$height)
(height.se <- sd(diabetes.df$height, na.rm = T)/sqrt(height.n))
possible.mean.height <- seq(from = 150, to = 250, length = 10000)
our.modelheight <- lm(height ~ 1, data = new.diabetes.df)
confint(our.modelheight, level = 0.9)
height.mean <- mean(new.diabetes.df$height)
height.n <- length(new.diabetes.df$height)
(height.se <- sd(diabetes.df$height, na.rm = T)/sqrt(height.n))
possible.mean.height <- seq(from = 150, to = 250, length = 10000)
our.modelheight <- lm(height ~ 1, data = new.diabetes.df)
confint(our.modelheight, level = 0.95)
height.mean <- mean(new.diabetes.df$height)
height.n <- length(new.diabetes.df$height)
(height.se <- sd(diabetes.df$height, na.rm = T)/sqrt(height.n))
possible.mean.height <- seq(from = 150, to = 250, length = 10000)
our.modelheight <- lm(height ~ 1, data = new.diabetes.df)
confint(our.modelheight, level = 0.99)
